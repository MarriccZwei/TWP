import Classes.hitboxes as hbx
test = True
'''Imported Hitboxes'''
corner1sImp = "-2728.486;-133.531;-1941.562|-3335.724;-129.954;-5702.128|-3942.962;-126.376;-9462.694|-4550.2;-122.798;-13223.26|-291.991;-484.962;-11775.301"
corner2sImp = "-870.257;169.396;-1583.458|-1477.495;172.974;-5344.024|-2084.733;176.551;-9104.59|-2691.97;180.129;-12865.156|1.51;527.263;-10762.903"

corner1s = hbx.uncodePoints(corner1sImp)
corner2s = hbx.uncodePoints(corner2sImp)

#generating hitboxes from imported points
hitboxes = [hbx.Hitbox(corner1s[i], corner2s[i]) for i in range(len(corner1s))]

'''Imported Cell Edges'''
cellTopsImp = "-19.441;-143.855;-17149.093|-19.427;-148.502;-18046.253|-2657.535;-284.222;-17953.202&-105.117;-148.243;-17143.847|-2671.379;-280.303;-17143.847|-2731.206;-287.971;-17944.296&-19.457;-138.929;-16198.477|-19.442;-143.67;-17113.847|-2598.187;-276.373;-17113.847&-91.571;-142.599;-16192.244|-2600.255;-271.187;-16192.244|-2668.627;-279.953;-17107.019&-19.472;-133.998;-15247.069|-19.457;-138.738;-16162.244|-2529.24;-267.383;-16162.244&-89.409;-137.54;-15240.641|-2529.131;-262.065;-15240.641|-2597.486;-270.835;-16155.201&-19.488;-129.067;-14295.673|-19.473;-133.806;-15210.642|-2460.289;-258.387;-15210.642&-87.252;-132.482;-14289.039|-2458.007;-252.939;-14289.039|-2526.345;-261.711;-15203.368&-19.503;-124.136;-13344.289|-19.488;-128.874;-14259.039|-2391.335;-249.387;-14259.039&-85.097;-127.423;-13337.436|-2386.883;-243.808;-13337.436|-2455.203;-252.583;-14251.52&-19.519;-119.205;-12392.921|-19.504;-123.942;-13307.437|-2322.377;-240.381;-13307.437&-82.947;-122.364;-12385.834|-2315.759;-234.67;-12385.834|-2384.059;-243.449;-13299.656&-19.534;-114.273;-11441.568|-19.519;-119.009;-12355.834|-2253.414;-231.369;-12355.834&-80.801;-117.306;-11434.231|-2244.635;-225.525;-11434.231|-2312.914;-234.308;-12347.774&-19.55;-109.342;-10490.234|-19.535;-114.076;-11404.231|-2184.447;-222.349;-11404.231&-78.659;-112.247;-10482.628|-2173.511;-216.373;-10482.628|-2241.768;-225.161;-11395.871&-19.565;-104.41;-9538.919|-19.551;-109.142;-10452.629|-2115.475;-213.322;-10452.629&-76.523;-107.187;-9531.026|-2102.387;-207.212;-9531.026|-2170.619;-216.005;-10443.946&-19.581;-99.478;-8587.625|-19.566;-104.209;-9501.026|-2046.498;-204.286;-9501.026&-74.391;-102.128;-8579.423|-2031.262;-198.041;-8579.423|-2099.469;-206.841;-9491.995&-19.597;-94.545;-7636.356|-19.582;-99.274;-8549.424|-1977.515;-195.24;-8549.424&-72.266;-97.068;-7627.821|-1960.138;-188.86;-7627.821|-2028.317;-197.667;-8540.017&-19.612;-89.612;-6685.114|-19.597;-94.34;-7597.821|-1908.525;-186.182;-7597.821&-70.147;-92.008;-6676.218|-1889.013;-179.666;-6676.218|-1957.162;-188.482;-7588.008&-19.628;-84.679;-5733.903|-19.613;-89.404;-6646.218|-1839.529;-177.113;-6646.218&-68.035;-86.948;-5724.615|-1817.889;-170.458;-5724.615|-1886.004;-179.284;-6635.963&-19.643;-79.745;-4782.726|-19.629;-84.469;-5694.616|-1770.524;-168.028;-5694.616&-65.93;-81.887;-4773.013|-1746.764;-161.234;-4773.013|-1814.844;-170.071;-5683.878&-19.659;-74.811;-3831.588|-19.644;-79.532;-4743.013|-1701.512;-158.927;-4743.013&-63.833;-76.826;-3821.41|-1675.639;-151.99;-3821.41|-1743.68;-160.841;-4731.748&-19.675;-69.876;-2880.495|-19.66;-74.595;-3791.411|-1632.49;-149.807;-3791.411&-61.746;-71.764;-2869.808|-1604.514;-142.725;-2869.808|-1672.511;-151.592;-3779.566&-19.691;-64.941;-1929.452|-19.676;-69.656;-2839.808|-1563.458;-140.664;-2839.808&-59.669;-66.7;-1918.205|-1533.389;-133.434;-1918.205|-1601.339;-142.321;-2827.324&-19.707;-60.005;-978.468|-19.692;-64.717;-1888.205|-1494.415;-131.496;-1888.205&-57.603;-61.636;-966.602|-1462.264;-124.112;-966.602|-1530.161;-133.023;-1875.013&-19.722;-55.067;-27.551|-19.708;-59.776;-936.603|-1425.36;-122.296;-936.603&-55.548;-56.57;-15|-1391.138;-114.754;-15|-1458.976;-123.693;-922.622"
cellTops = [hbx.uncodePoints(cellTop) for cellTop in cellTopsImp.split('&')]

cellBotsImp = "-20.537;142.829;-17149.485|-20.552;147.661;-18083.348|-2662.339;171.834;-18006.847&-100.349;143.536;-17143.847|-2668.991;167.067;-17143.847|-2732.78;172.438;-17998.167&-20.522;137.907;-16198.495|-20.537;142.643;-17113.847|-2595.919;166.236;-17113.847&-92.514;138.527;-16192.244|-2597.937;161.086;-16192.244|-2666.24;166.838;-17107.002&-20.506;132.982;-15247.087|-20.521;137.717;-16162.244|-2527.039;160.286;-16162.244&-90.326;133.57;-15240.641|-2526.884;155.105;-15240.641|-2595.17;160.856;-16155.183&-20.491;128.057;-14295.691|-20.506;132.791;-15210.642|-2458.156;154.335;-15210.642&-88.141;128.613;-14289.039|-2455.831;149.122;-14289.039|-2524.099;154.873;-15203.35&-20.476;123.132;-13344.308|-20.491;127.865;-14259.039|-2389.269;148.383;-14259.039&-85.959;123.656;-13337.436|-2384.777;143.138;-13337.436|-2453.028;148.889;-14251.501&-20.461;118.207;-12392.94|-20.475;122.939;-13307.437|-2320.378;142.43;-13307.437&-83.781;118.699;-12385.834|-2313.724;137.153;-12385.834|-2381.955;142.903;-13299.637&-20.445;113.282;-11441.589|-20.46;118.012;-12355.834|-2251.482;136.475;-12355.834&-81.608;113.741;-11434.231|-2242.67;131.167;-11434.231|-2310.88;136.917;-12347.753&-20.43;108.356;-10490.254|-20.445;113.085;-11404.231|-2182.583;130.519;-11404.231&-79.439;108.784;-10482.628|-2171.617;125.179;-10482.628|-2239.805;130.929;-11395.85&-20.415;103.431;-9538.94|-20.429;108.158;-10452.629|-2113.678;124.562;-10452.629&-77.275;103.827;-9531.026|-2100.564;119.19;-9531.026|-2168.727;124.939;-10443.924&-20.399;98.505;-8587.647|-20.414;103.231;-9501.026|-2044.768;118.603;-9501.026&-75.117;98.869;-8579.423|-2029.51;113.199;-8579.423|-2097.648;118.948;-9491.973&-20.384;93.58;-7636.379|-20.399;98.304;-8549.424|-1975.852;112.642;-8549.424&-72.964;93.911;-7627.821|-1958.457;107.207;-7627.821|-2026.566;112.955;-8539.994&-20.369;88.654;-6685.138|-20.383;93.376;-7597.821|-1906.93;106.679;-7597.821&-70.817;88.953;-6676.218|-1887.404;101.212;-6676.218|-1955.483;106.96;-7587.984&-20.353;83.728;-5733.928|-20.368;88.448;-6646.218|-1838.001;100.714;-6646.218&-68.678;83.995;-5724.615|-1816.35;95.215;-5724.615|-1884.396;100.963;-6635.938&-20.338;78.802;-4782.752|-20.353;83.519;-5694.616|-1769.064;94.746;-5694.616&-66.546;79.036;-4773.013|-1745.297;89.216;-4773.013|-1813.307;94.963;-5683.852&-20.323;73.875;-3831.615|-20.338;78.591;-4743.013|-1700.119;88.776;-4743.013&-64.422;74.077;-3821.41|-1674.244;83.214;-3821.41|-1742.214;88.961;-4731.721&-20.308;68.948;-2880.522|-20.322;73.661;-3791.411|-1631.165;82.803;-3791.411&-62.308;69.118;-2869.808|-1603.191;77.209;-2869.808|-1671.117;82.956;-3779.538&-20.292;64.021;-1929.48|-20.307;68.731;-2839.808|-1562.201;76.827;-2839.808&-60.203;64.159;-1918.205|-1532.137;71.201;-1918.205|-1600.016;76.947;-2827.296&-20.277;59.094;-978.497|-20.292;63.801;-1888.205|-1493.226;70.847;-1888.205&-58.109;59.199;-966.602|-1461.084;65.189;-966.602|-1528.91;70.935;-1874.984&-20.262;54.166;-27.582|-20.276;58.87;-936.603|-1424.239;64.864;-936.603&-56.028;54.238;-15|-1390.031;59.174;-15|-1457.798;64.919;-922.592"
cellBots = [hbx.uncodePoints(cellBot) for cellBot in cellBotsImp.split('&')]

cells:hbx.List[hbx.Cell] = list()
for i in range(len(cellBots)):
    cells.append(hbx.Cell(cellBots[i], cellTops[i]))

batteries:hbx.List[hbx.Battery] = list()
batteryTemplate = hbx.Battery((0,0,0), 150, 75, 100)
for c in cells:
    batteries += c.populate(batteryTemplate, 25, hitboxes)

returnstr = ';'.join([str(b.corner1[0]) for b in batteries])+'|'+';'.join([str(b.corner1[1]) for b in batteries])+'|'+';'.join([str(b.corner1[2]) for b in batteries])+'|'
returnstr += ';'.join([str(b.corner2[0]) for b in batteries])+'|'+';'.join([str(b.corner2[1]) for b in batteries])+'|'+';'.join([str(b.corner2[2]) for b in batteries])
with open("vsScripts/batPos.txt", 'w') as batPosLog:
    batPosLog.write(returnstr)

if test:
    #testing if coordinates have been imported properly
    import matplotlib.pyplot as plt
    xs = [pt[0] for pt in corner1s]+[pt[0] for pt in corner2s]
    zs = [pt[2] for pt in corner1s]+[pt[2] for pt in corner2s]

    for i in cellTops:
        plt.plot([pt[0] for pt in i], [pt[2] for pt in i])
    for i in cellBots:
        plt.plot([pt[0] for pt in i], [pt[2] for pt in i])

    #testing if the tops and bottoms of the cells correspond to each other
    # plt.plot([pt[0] for pt in cellBots[5]], [pt[2] for pt in cellBots[5]])
    # plt.plot([pt[0] for pt in cellTops[5]], [pt[2] for pt in cellTops[5]])
    # plt.plot([cellTops[8][0][0]]+[cellTops[8][1][0]], [cellTops[8][0][2]]+[cellTops[8][1][2]])

    plt.scatter([b.corner1[0] for b in batteries], [b.corner1[2] for b in batteries])
    plt.scatter([b.corner2[0] for b in batteries], [b.corner2[2] for b in batteries])

    plt.scatter(xs, zs)
    plt.show()
    print(len(batteries))
import Classes.hitboxes as hbx
test = True
'''Imported Hitboxes'''
corner1sImp = "-2012.115;-229.364;-16418.475|-2494.394;-246.41;-12639.887|-2976.673;-263.456;-8861.299|-3458.952;-280.501;-5082.712|736.659;-619.849;-7328.047"
corner2sImp = "-161.142;73.563;-16109.548|-643.421;56.518;-12330.96|-1125.7;39.472;-8552.373|-1607.979;22.426;-4773.785|1043.578;391.811;-6316.771"

corner1s = hbx.uncodePoints(corner1sImp)
corner2s = hbx.uncodePoints(corner2sImp)

#generating hitboxes from imported points
hitboxes = [hbx.Hitbox(corner1s[i], corner2s[i]) for i in range(len(corner1s))]

'''Imported Cell Edges'''
cellPtsImp = "-1221.253;268.004;-35|-1219.294;-267.134;-35|-1179.316;255.303;-1298.207|-1177.448;-255.033;-1298.207|1179.067;142.095;-1298.207|1178.214;-141.473;-1298.207&-1176.992;254.621;-1368.207|-1175.129;-254.364;-1368.207|-1120.48;237.488;-3070.411|-1118.74;-238.051;-3070.41|1120.253;131.736;-3070.411|1119.465;-130.338;-3070.41&-1118.156;236.808;-3140.411|-1116.421;-237.383;-3140.41|-1061.644;219.651;-4842.615|-1060.031;-221.061;-4842.613|1061.439;121.375;-4842.615|1060.716;-119.204;-4842.613&-1059.321;218.976;-4912.615|-1057.712;-220.393;-4912.613|-998.393;200.447;-6747.823|-996.917;-202.785;-6747.819|998.212;110.234;-6747.822|997.557;-107.233;-6747.82&-996.069;199.774;-6817.823|-994.598;-202.117;-6817.819|-936.198;181.526;-8621.205|-934.857;-184.801;-8621.2|936.04;99.276;-8621.204|935.454;-95.462;-8621.201&-933.874;180.857;-8691.205|-932.538;-184.133;-8691.2|-873.475;162.4;-10510.5|-872.27;-166.646;-10510.494|873.34;88.221;-10510.498|872.824;-83.59;-10510.495&-871.151;161.736;-10580.5|-869.952;-165.978;-10580.494|-810.751;143.215;-12399.794|-809.684;-148.467;-12399.787|810.641;77.161;-12399.793|810.193;-71.718;-12399.789&-808.427;142.558;-12469.794|-807.365;-147.8;-12469.787|-748.027;123.955;-14289.089|-747.097;-130.258;-14289.081|747.941;66.094;-14289.087|747.562;-59.845;-14289.083&-745.703;123.306;-14359.089|-744.778;-129.591;-14359.081|-685.303;104.596;-16178.384|-684.51;-112.005;-16178.375|685.241;55.018;-16178.382|684.932;-47.971;-16178.377&-682.979;103.961;-16248.384|-682.191;-111.341;-16248.375|-620.481;84.444;-18130.838|-619.832;-93.078;-18130.828|620.446;43.559;-18130.835|620.207;-35.697;-18130.831"
cellPts = [hbx.uncodePoints(cellTop) for cellTop in cellPtsImp.split('&')]
# cellTopsImp = "-19.382;-170;-16457.981|-19.353;-179.571;-18037.536|-2447.738;-297.517;-17952.984&-57.371;-171.763;-16446.147|-2381.874;-283.665;-16446.147|-2481.01;-299.032;-17938.245&-19.412;-160.044;-14816.521|-19.383;-169.737;-16416.147|-2347.581;-281.817;-16416.147&-52.743;-161.547;-14803.032|-2272.703;-266.736;-14803.032|-2378.892;-283.214;-16401.27&-19.443;-150.081;-13174.183|-19.413;-159.769;-14773.033|-2240.223;-264.999;-14773.033&-50.961;-151.467;-13159.917|-2163.533;-249.787;-13159.917|-2269.662;-266.276;-14757.27&-19.473;-140.118;-11531.932|-19.444;-149.8;-13129.918|-2132.852;-248.16;-13129.918&-49.192;-141.386;-11516.802|-2054.362;-232.814;-11516.802|-2160.426;-249.318;-13113.166&-19.504;-130.153;-9889.785|-19.475;-139.83;-11486.803|-2025.466;-231.296;-11486.803&-47.438;-131.304;-9873.688|-1945.191;-215.813;-9873.688|-2051.181;-232.335;-11468.939&-19.535;-120.187;-8247.76|-19.505;-129.858;-9843.688|-1918.064;-214.403;-9843.688&-45.699;-121.22;-8230.573|-1836.019;-198.778;-8230.573|-1941.926;-215.322;-9824.566&-19.565;-110.221;-6605.879|-19.536;-119.883;-8200.574|-1810.645;-197.475;-8200.574&-43.978;-111.135;-6587.458|-1726.848;-181.7;-6587.458|-1832.659;-198.273;-8180.018&-19.596;-100.252;-4964.172|-19.567;-109.906;-6557.459|-1703.205;-180.503;-6557.459&-42.277;-101.048;-4944.344|-1617.676;-164.57;-4944.344|-1723.378;-181.18;-6535.257&-19.627;-90.281;-3322.676|-19.598;-99.926;-4914.344|-1595.744;-163.479;-4914.344&-40.598;-90.957;-3301.229|-1508.504;-147.375;-3301.229|-1614.08;-164.032;-4890.236&-19.658;-80.308;-1681.439|-19.629;-89.941;-3271.23|-1488.258;-146.387;-3271.23&-38.942;-80.862;-1658.114|-1399.331;-130.094;-1658.114|-1504.759;-146.816;-3244.892&-19.689;-70.332;-40.524|-19.66;-79.951;-1628.115|-1380.746;-129.209;-1628.115&-37.313;-70.761;-14.999|-1290.158;-112.701;-14.999|-1395.411;-129.51;-1599.139"
# cellTops = [hbx.uncodePoints(cellTop) for cellTop in cellTopsImp.split('&')]

# cellBotsImp = "-20.58;169.165;-16458.589|-20.61;178.976;-18079.718|-2450.667;296.448;-18018.85&-56.717;170.84;-16446.147|-2379.565;283.326;-16446.147|-2482.953;297.921;-18003.937&-20.551;159.226;-14816.545|-20.58;168.907;-16416.147|-2345.33;281.486;-16416.147&-53.823;160.754;-14803.032|-2270.514;267.927;-14803.032|-2376.585;282.907;-16401.246&-20.521;149.286;-13174.207|-20.55;158.962;-14773.033|-2238.088;266.176;-14773.033&-51.984;150.718;-13159.917|-2161.462;252.521;-13159.917|-2267.475;267.499;-14757.246&-20.491;139.345;-11531.958|-20.52;149.016;-13129.918|-2130.833;250.859;-13129.918&-50.158;140.683;-11516.803|-2052.411;237.106;-11516.803|-2158.358;252.083;-13113.141&-20.461;129.406;-9889.811|-20.49;139.071;-11486.803|-2023.563;235.533;-11486.803&-48.346;130.648;-9873.688|-1943.36;221.68;-9873.688|-2049.233;236.658;-11468.913&-20.431;119.466;-8247.787|-20.46;129.125;-9843.688|-1916.277;220.195;-9843.688&-46.551;120.614;-8230.573|-1834.309;206.241;-8230.573|-1940.098;221.22;-9824.54&-20.401;109.528;-6605.907|-20.43;119.179;-8200.574|-1808.974;204.844;-8200.574&-44.773;110.58;-6587.458|-1725.257;190.787;-6587.458|-1830.951;205.768;-8179.991&-20.371;99.59;-4964.2|-20.4;109.232;-6557.459|-1701.652;189.476;-6557.459&-43.015;100.546;-4944.344|-1616.206;175.311;-4944.344|-1721.791;190.298;-6535.23&-20.342;89.652;-3322.705|-20.371;99.285;-4914.344|-1594.308;174.086;-4914.344&-41.278;90.512;-3301.229|-1507.155;159.809;-3301.229|-1612.613;174.804;-4890.209&-20.312;79.716;-1681.468|-20.341;89.337;-3271.23|-1486.94;158.668;-3271.23&-39.565;80.478;-1658.114|-1398.104;144.271;-1658.114|-1503.414;159.281;-3244.864&-20.282;69.78;-40.553|-20.311;79.388;-1628.115|-1379.546;143.214;-1628.115&-37.878;70.444;-15|-1289.054;128.685;-15|-1394.188;143.718;-1599.112"
# cellBots = [hbx.uncodePoints(cellBot) for cellBot in cellBotsImp.split('&')]

# cells:hbx.List[hbx.Cell] = list()
# for i in range(len(cellBots)):
#     cells.append(hbx.Cell(cellBots[i], cellTops[i]))
internalMargin = 1

cells = [hbx.Cell(pts) for pts in cellPts]
batteries:hbx.List[hbx.Battery] = list()
batteryTemplate = hbx.Battery((0,0,0), 237.521, 118.76, 257.521)
batVolume = batteryTemplate.zdim*batteryTemplate.ydim*batteryTemplate.xdim

#initial guess
for c in cells:
    batteries += c.populate(batteryTemplate, internalMargin, hitboxes)

#battery module size optimisation
packlens = list() #will give as the distribution of batteries per pack
correctPacklens = list() #the packlens of the optimum battery distribution
ratioRange = [i/10 for i in range(10, 31)]
for xrel in ratioRange:
    for zrel in ratioRange:
        newBatYdim = (batVolume/xrel/zrel)**(1/3)
        newBat = hbx.Battery((0,0,0), xrel*newBatYdim, newBatYdim, zrel*newBatYdim)
        newBats:hbx.List[hbx.Battery] = list()
        packlens = list()
        for c in cells:
            batappend = c.populate(newBat, internalMargin, hitboxes)
            newBats += batappend
            packlens.append(len(batappend))
        if len(newBats)>len(batteries):
            batteryTemplate = newBat
            batteries = newBats
            correctPacklens = packlens

returnstr = ';'.join([str(b.corner1[0]) for b in batteries])+'|'+';'.join([str(b.corner1[1]) for b in batteries])+'|'+';'.join([str(b.corner1[2]) for b in batteries])+'|'
returnstr += ';'.join([str(b.corner2[0]) for b in batteries])+'|'+';'.join([str(b.corner2[1]) for b in batteries])+'|'+';'.join([str(b.corner2[2]) for b in batteries])
with open("vsScripts/batPos.txt", 'w') as batPosLog:
    batPosLog.write(returnstr)

if test:
    #testing if coordinates have been imported properly
    import matplotlib.pyplot as plt
    xs = [pt[0] for pt in corner1s]+[pt[0] for pt in corner2s]
    zs = [pt[2] for pt in corner1s]+[pt[2] for pt in corner2s]

    for i in cellPts:
        plt.plot([pt[0] for pt in i], [pt[2] for pt in i])

    #testing if the tops and bottoms of the cells correspond to each other
    # plt.plot([pt[0] for pt in cellBots[5]], [pt[2] for pt in cellBots[5]])
    # plt.plot([pt[0] for pt in cellTops[5]], [pt[2] for pt in cellTops[5]])
    # plt.plot([cellTops[8][0][0]]+[cellTops[8][1][0]], [cellTops[8][0][2]]+[cellTops[8][1][2]])

    plt.scatter([b.corner1[0] for b in batteries], [b.corner1[2] for b in batteries])
    plt.scatter([b.corner2[0] for b in batteries], [b.corner2[2] for b in batteries])

    plt.scatter(xs, zs)
    plt.show()
    print(f"{len(batteries)} batteries in packs of: {correctPacklens}")